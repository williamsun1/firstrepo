?plot()
mean(subset(mrc_table2, count >= 1500 & count <= 2000 & type == 2)$q5_value_added) # mean of q5_value_added conditional on being private non-profit with average cohort size 1500-2000
## Part 4
# Clear memory and set working directory
rm(list = ls())
setwd("/Users/williamsun/Desktop/ECON 117/econ117_pset2_folder")
# Section 4.a.
mrc_table2 <- read.csv("mrc_table2.csv")
# Questions 4.a.i.-4.a.ii.
dim(mrc_table2)
length(mrc_table2)
names(mrc_table2)
# Question 4.a.iii.
class(mrc_table2$czname)
class(mrc_table2$cz)
# Question 4.a.iv.
# Note that we are counting observations and not variables.
sum(mrc_table2$cz == 38300, na.rm = TRUE)
# Question 4.a.v.
head(mrc_table2$state) # To find how states are notated
idahocolleges <- subset(mrc_table2, state == "ID")
nrow(idahocolleges)
# Number of Idaho colleges in Ada or Canyon counties / number of Idaho colleges
mean(idahocolleges$county == "Ada" | idahocolleges$county == "Canyon")
# Section 4.b.
public <- subset(mrc_table2, type == 1)
nrow(public)
privnonprofit <- subset(mrc_table2, type == 2)
nrow(privnonprofit)
forprofit <- subset(mrc_table2, type == 3)
nrow(forprofit)
# Section 4.c.
mean(public$female, na.rm = TRUE) # Conditional on being public
# Note that private schools include both private non-profit and for-profit schools.
mean(rbind(privnonprofit, forprofit)$female, na.rm = TRUE) # Conditional on being private
mean(forprofit$female, na.rm = TRUE) # Conditional on being for-profit
## Part 5
# Section 5.a.
# Question 5.a.i.
mrc_table2_sorted <- mrc_table2[order(mrc_table2$par_median, decreasing = TRUE),]
head(mrc_table2_sorted, n = 10L)$name # Colleges with the 10 highest median parent incomes
tail(mrc_table2_sorted, n = 10L)$name # Colleges with the 10 lowest median parent incomes
# Question 5.a.ii.
which(mrc_table2_sorted$name == "Yale University")
which(mrc_table2_sorted$name == "Princeton University")
which(mrc_table2_sorted$name == "Quinnipiac University")
which(mrc_table2_sorted$name == "Southern Connecticut State University")
which(mrc_table2_sorted$name == "CUNY Queens College")
# Question 5.a.iii.
mrc_table2_sorted_subset <- subset(mrc_table2_sorted, select = c(par_median, k_median))
mrc_table2_sorted_subset[which(mrc_table2_sorted$name == "Yale University"),]
mrc_table2_sorted_subset[which(mrc_table2_sorted$name == "Princeton University"),]
mrc_table2_sorted_subset[which(mrc_table2_sorted$name == "Quinnipiac University"),]
mrc_table2_sorted_subset[which(mrc_table2_sorted$name == "Southern Connecticut State University"),]
mrc_table2_sorted_subset[which(mrc_table2_sorted$name == "CUNY Queens College"),]
# Section 5.b.
# Median child's income appears on the y-axis and median parental income appears on the x-axis.
plot(mrc_table2$par_median, mrc_table2$k_median, xlab = "Median Parental Income", ylab = "Median Child's Income (Early 30s)", main = "Median Child's Income vs. Median Parental Income")
## Part 6
mrc_table1 <- read.csv("mrc_table1.csv")
names(mrc_table1)
# Question 6.a.ii.
mobility_rate_yale <- mrc_table1$mr_kq5_pq1[which(mrc_table1$name == "Yale University")]
mobility_rate_cunyqueens <- mrc_table1$mr_kq5_pq1[which(mrc_table1$name == "CUNY Queens College")]
mobility_rate_yale
mobility_rate_cunyqueens
# Question 6.a.iii.
access_rate_yale <- mrc_table1$par_q1[which(mrc_table1$name == "Yale University")]
access_rate_yale
mrc_table1$name[which.max(mrc_table1$par_q1)]
# Question 6.a.iv.
# Calculation for Yale
# Note: P(Kid Q5 | Parent Q1 ∩ Yale) represents a probability with two conditions: {Parent Q1} and {Yale}.
# P(Kid Q5 | Parent Q1 ∩ Yale) = P(Kid Q5 ∩ Parent Q1 | Yale) / P(Parent Q1 | Yale)
# by the definition of conditional probability as (joint probability / marginal probability): P(A|B) = P(A∩B)/P(B)
# Therefore, the conditional probability we are finding is (mobility rate / access rate).
mobility_rate_yale / access_rate_yale
mrc_table1$kq5_cond_parq1[which(mrc_table1$name == "Yale University")] / 100
# Calculation for CUNY Queens
access_rate_cunyqueens <- mrc_table1$par_q1[which(mrc_table1$name == "CUNY Queens College")]
mobility_rate_cunyqueens / access_rate_cunyqueens
mrc_table1$kq5_cond_parq1[which(mrc_table1$name == "CUNY Queens College")] / 100
# Section 6.b.
# Question 6.b.i.
mrc_table2 <- cbind(mrc_table2, "q5_value_added" = mrc_table2$k_q5 - mrc_table2$par_q5) # Add the new variable, called "q5_value_added," to the data frame
# Note that mrc_table2 now contains 86 variables.
# Question 6.b.ii.
hist(mrc_table2$q5_value_added, breaks = 50)
mean(mrc_table2$q5_value_added)
median((mrc_table2$q5_value_added))
# Question 6.b.iii.
mean(subset(mrc_table2, type == 1)$q5_value_added) # mean of q5_value_added conditional on being public
mean(subset(mrc_table2, type == 2)$q5_value_added) # mean of q5_value_added conditional on being private non-profit
mean(subset(mrc_table2, type == 3)$q5_value_added) # mean of q5_value_added conditional on being for-profit
# Question 6.b.iv.
# Note: All categories are inclusive, i.e. a cohort size in the "500-1000" category  means 500 <= count <= 1000.
mean(subset(mrc_table2, count >= 0 & count <= 500 & type == 1)$q5_value_added) # mean of q5_value_added conditional on being public with average cohort size 0-500
mean(subset(mrc_table2, count >= 500 & count <= 1000 & type == 1)$q5_value_added) # mean of q5_value_added conditional on being public with average cohort size 500-1000
mean(subset(mrc_table2, count >= 1000 & count <= 1500 & type == 1)$q5_value_added) # mean of q5_value_added conditional on being public with average cohort size 1000-1500
mean(subset(mrc_table2, count >= 1500 & count <= 2000 & type == 1)$q5_value_added) # mean of q5_value_added conditional on being public with average cohort size 1500-2000
mean(subset(mrc_table2, count >= 0 & count <= 500 & type == 2)$q5_value_added) # mean of q5_value_added conditional on being private non-profit with average cohort size 0-500
mean(subset(mrc_table2, count >= 500 & count <= 1000 & type == 2)$q5_value_added) # mean of q5_value_added conditional on being private non-profit with average cohort size 500-1000
mean(subset(mrc_table2, count >= 1000 & count <= 1500 & type == 2)$q5_value_added) # mean of q5_value_added conditional on being private non-profit with average cohort size 1000-1500
mean(subset(mrc_table2, count >= 1500 & count <= 2000 & type == 2)$q5_value_added) # mean of q5_value_added conditional on being private non-profit with average cohort size 1500-2000
mean(subset(mrc_table2, count >= 1500 & count < 2000 & type == 2)$q5_value_added) # mean of q5_value_added conditional on being private non-profit with average cohort size 1500-2000
library(tidyvers)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
tidyverse_update()
install.packages(c("broom","ggplot2","jsonlite","rlang"))
install.packages(c("broom", "ggplot2", "jsonlite", "rlang"))
install.packages(c("nycflights13,""gapminder","Lahman"))
install.packages(c("nycflights13","gapminder","Lahman"))
1+2
1+2
?dput
dput("nycflights13")
head(nycflights13::airlines)
?len
?length
length(nycflights13::airlines)
nrows(nycflights13::airlines)
nrow(nycflights13::airlines)
nycflights13::airlines
ggplot::mpg
ggplot2::mpg
?mpg
library(tidyverse)
?ggplot
ggplot(data=mpg) +
geom_point(mapping = aes(x=displ, y=hwy))
col_names(mpg)
?col_names
colnames(mpg)
setwd("/Users/williamsun/Desktop/YCELP SLS")
# Set working directory and upload packages
library(dplyr)
library(readxl)
setwd("/Users/williamsun/Desktop/YCELP SLS")
spi <- read_excel("SPI Time Series 1990-2020 data file.xlsx", sheet = "1990-2020 Time-series data")
spi <- spi(-1)
spi <- spi[-1]
spi <- read_excel("SPI Time Series 1990-2020 data file.xlsx", sheet = "1990-2020 Time-series data")
spi <- spi[-1]
head(spi)
spi <- read_excel("SPI Time Series 1990-2020 data file.xlsx", sheet = "1990-2020 Time-series data")
# Get rid of first row
spi <- spi[-1,]
head(spi)
head(spi, 5)
?head
head(spi, n=5L)
spi <- read_excel("SPI Time Series 1990-2020 data file.xlsx", sheet = "1990-2020 Time-series data")
head(spi, n=5L)
# Get rid of first row
spi <- spi[-1,]
head(spi, n=5L)
spi <- read_excel("SPI Time Series 1990-2020 data file.xlsx", sheet = "1990-2020 Time-series data")
# Get rid of first row
names(spi) <- spi[2,]
spi <- spi[-1,]
head(spi, n=5L)
spi <- read_excel("SPI Time Series 1990-2020 data file.xlsx", sheet = "1990-2020 Time-series data")
# Get rid of first row
names(spi) <- spi[1,]
spi <- spi[-1,]
head(spi, n=5L)
names(spi)
?names
spi(1,)
spi[1,]
names(spi)
spi[77]
install("physics")
?install
?install.packages
install.packages(physics)
install.packages("physics")
